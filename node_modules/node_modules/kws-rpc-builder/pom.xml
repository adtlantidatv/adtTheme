<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.kurento.kws</groupId>
	<artifactId>kws-rpc-builder</artifactId>
	<version>4.3.17</version>
	<packaging>jar</packaging>

	<name>Kurento Web SDK - RPC Builder</name>
	<description>
		Kurento Web SDK RPC Builder

		The kws-rpc-builder project contains the implementation
		of a transport and protocol agnostic RPC library fro browser and Node.js
	</description>
	<url>http://www.kurento.org/docs/${project.version}</url>

	<issueManagement>
		<system>Redmine</system>
		<url>https://repository.kurento.org/redmine/</url>
	</issueManagement>

	<licenses>
		<license>
			<name>GNU Lesser General Public License</name>
			<url>http://www.gnu.org/licenses/lgpl-2.1.txt</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<organization>
		<name>Kurento</name>
		<url>http://www.kurento.org</url>
	</organization>

	<scm>
		<url>https://github.com/Kurento/${project.artifactId}</url>
		<connection>scm:git:https://github.com/Kurento/${project.artifactId}.git</connection>
		<developerConnection>scm:git:ssh://git@github.com:Kurento/${project.artifactId}.git</developerConnection>
		<tag>kws-rpc-builder-4.3.17</tag>
	</scm>

	<mailingLists>
		<mailingList>
			<name>Kurento List</name>
			<subscribe>http://groups.google.com/group/kurento/subscribe</subscribe>
			<post>http://groups.google.com/group/kurento/post</post>
			<archive>http://groups.google.com/group/kurento/about</archive>
		</mailingList>
		<mailingList>
			<name>Kurento Core List</name>
			<subscribe>http://groups.google.com/group/kurento-core/subscribe</subscribe>
			<post>http://groups.google.com/group/kurento-core/post</post>
			<archive>http://groups.google.com/group/kurento-core/about</archive>
		</mailingList>
	</mailingLists>

	<developers>
		<developer>
			<id>kurento.org</id>
			<name>-kurento.org Community</name>
			<organization>Kurento.org</organization>
			<organizationUrl>http://www.kurento.org</organizationUrl>
		</developer>
	</developers>

	<properties>
		<version.shell.plugin>1.0-beta-1</version.shell.plugin>
		<version.release.plugin>2.5</version.release.plugin>
		<version.deploy.plugin>2.8</version.deploy.plugin>
		<version.gpg.plugin>1.4</version.gpg.plugin>
		<!-- ************** -->
		<!-- Build settings -->
		<!-- ************** -->

		<!-- Cross plugins settings -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

		<!-- maven-compiler-plugin -->
		<maven.compiler.target>1.7</maven.compiler.target>
		<maven.compiler.source>1.7</maven.compiler.source>

		<!-- Options to override the compiler arguments directly on the compiler 
			arument line to separate between what the IDE understands as the source level 
			and what the Maven compiler actually use. -->
		<maven.compiler.argument.target>${maven.compiler.target}</maven.compiler.argument.target>
		<maven.compiler.argument.source>${maven.compiler.source}</maven.compiler.argument.source>

		<!-- maven-enforcer-plugin -->
		<maven.min.version>3.0.3</maven.min.version>
		<jdk.min.version>${maven.compiler.source}</jdk.min.version>

		<!-- maven-eclipse-plugin -->
		<downloadSources>true</downloadSources>
		<downloadJavadocs>true</downloadJavadocs>

		<!-- maven-pmd-plugin -->
		<targetJdk>${maven.compiler.target}</targetJdk>

		<!-- maven-release-plugin -->
		<useReleaseProfile>false</useReleaseProfile>
		<arguments>-Pkurento-release</arguments>

		<!-- maven-assembly-plugin -->
		<sourceReleaseAssemblyDescriptor>source-release</sourceReleaseAssemblyDescriptor>
	</properties>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>${version.deploy.plugin}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
					<version>${version.release.plugin}</version>
					<dependencies>
						<dependency>
							<groupId>org.apache.maven.scm</groupId>
							<artifactId>maven-scm-provider-gitexe</artifactId>
							<version>1.8.1</version>
						</dependency>
					</dependencies>
					<configuration>
						<pushChanges>false</pushChanges>
					</configuration>
					<executions>
						<execution>
							<phase>package</phase>
							<goals>
								<goal>attached</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<!-- This will sign the artifact, the POM, and all attached artifacts -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-gpg-plugin</artifactId>
					<version>${version.gpg.plugin}</version>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>shell-maven-plugin</artifactId>
				<version>${version.shell.plugin}</version>
				<executions>
					<execution>
						<id>stage-sources</id>
						<phase>process-sources</phase>
						<goals>
							<goal>shell</goal>
						</goals>
						<configuration>
							<workDir>${workDir}</workDir>
							<chmod>true</chmod>
							<keepScriptFile>true</keepScriptFile>
							<script>
								cd ${basedir}
								npm install
								node_modules/.bin/grunt
								node_modules/.bin/grunt sync:bower
								mkdir -p \
								src/main/resources/META-INF/resources/js/
								cp dist/* \
								src/main/resources/META-INF/resources/js/
							</script>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<configuration>
					<descriptors>
						<descriptor>
							${basedir}/assembly.xml
						</descriptor>
					</descriptors>
					<outputDirectory>${project.build.directory}</outputDirectory>
					<appendAssemblyId>false</appendAssemblyId>
				</configuration>

			</plugin>
		</plugins>
	</build>

	<profiles>
		<!-- The profile kurento-release must be active when a project is released. 
			The configuration in this POM will automatically call this profile if using 
			the maven-release-plugin. If the maven-release-plugin is not used during 
			the release, this profile must be manually activated. -->
		<profile>
			<id>kurento-release</id>
			<build>
				<plugins>
					<!-- Create a source-release artifact that contains the fully buildable 
						project directory source structure. This should be released to the Maven 
						repository for each JBoss project release. -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-assembly-plugin</artifactId>
						<dependencies>
							<dependency>
								<groupId>org.apache.apache.resources</groupId>
								<artifactId>apache-source-release-assembly-descriptor</artifactId>
								<version>1.0.4</version>
							</dependency>
						</dependencies>
						<executions>
							<execution>
								<id>source-release-assembly</id>
								<phase>package</phase>
								<goals>
									<goal>single</goal>
								</goals>
								<configuration>
									<runOnlyAtExecutionRoot>true</runOnlyAtExecutionRoot>
									<descriptorRefs>
										<descriptorRef>${sourceReleaseAssemblyDescriptor}</descriptorRef>
									</descriptorRefs>
									<tarLongFileFormat>gnu</tarLongFileFormat>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-deploy-plugin</artifactId>
						<configuration>
							<updateReleaseInfo>true</updateReleaseInfo>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<executions>
							<execution>
								<id>attach-javadocs</id>
								<goals>
									<goal>jar</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- This profile can be activated to generate gpg signatures for all build 
			artifacts. This profile requires that the properties "gpg.keyname" and "gpg.passphrase" 
			are available to the current build. -->
		<profile>
			<id>gpg-sign</id>
			<build>
				<plugins>
					<!-- This will sign the artifact, the POM, and all attached artifacts -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<configuration>
							<useAgent>true</useAgent>
						</configuration>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
