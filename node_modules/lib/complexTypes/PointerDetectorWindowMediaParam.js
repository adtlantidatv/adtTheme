/* Autogenerated with Kurento Idl */

/*
 * (C) Copyright 2013-2014 Kurento (http://kurento.org/)
 *
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the GNU Lesser General Public License
 * (LGPL) version 2.1 which accompanies this distribution, and is available at
 * http://www.gnu.org/licenses/lgpl-2.1.html
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 */

var checkType = require('../checkType');

/**
 * Media API for the Kurento Web SDK
 *
 * @module KwsMedia/complexTypes
 *
 * @copyright 2014 Kurento (http://kurento.org/)
 * @license LGPL
 */

/**
 * Checker for {@link KwsMedia/complexTypes~PointerDetectorWindowMediaParam}
 *
 * @param {String} key
 * @param {KwsMedia/complexTypes~PointerDetectorWindowMediaParam} value
 */
function checkPointerDetectorWindowMediaParam(key, value)
{
  checkType('String', key+'.id', value.id, true);
  checkType('int', key+'.height', value.height, true);
  checkType('int', key+'.width', value.width, true);
  checkType('int', key+'.upperRightX', value.upperRightX, true);
  checkType('int', key+'.upperRightY', value.upperRightY, true);
  checkType('String', key+'.activeImage', value.activeImage);
  checkType('float', key+'.imageTransparency', value.imageTransparency);
  checkType('String', key+'.image', value.image);
};


/**
 * Data structure for UI Pointer detection in video streams.

All the coordinates are in pixels. X is horizontal, Y is vertical, running from the top of the window. Thus, 0,0 corresponds to the topleft corner.
 *
 * @typedef KwsMedia/complexTypes~PointerDetectorWindowMediaParam
 *
 * @type {Object}
 * @property {String} id - id of the window for pointer detection
 * @property {int} height - height in pixels
 * @property {int} width - width in pixels
 * @property {int} upperRightX - X coordinate in pixels of the upper left corner
 * @property {int} upperRightY - Y coordinate in pixels of the upper left corner
 * @property {String} activeImage - uri of the image to be used when the pointer is inside the window
 * @property {float} imageTransparency - transparency ratio of the image
 * @property {String} image - uri of the image to be used for the window.

If :rom:attr:`activeImage` has been set, it will only be shown when the pointer is outside of the window.
 */


module.exports = checkPointerDetectorWindowMediaParam;
